{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Textarea = React.forwardRef<\r\n  HTMLTextAreaElement,\r\n  React.ComponentProps<\"textarea\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/collapsible.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\r\n\r\nconst Collapsible = CollapsiblePrimitive.Root\r\n\r\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\r\n\r\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\r\n\r\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;AAIA,MAAM,cAAc,0KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,0KAAA,CAAA,qBAAuC;AAElE,MAAM,qBAAqB,0KAAA,CAAA,qBAAuC","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/app/components/prof/evaluation.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\"\r\nimport {\r\n  AlertCircle,\r\n  CheckCircle2,\r\n  Save,\r\n  Users,\r\n  FileText,\r\n  PresentationIcon,\r\n  MessageCircle,\r\n  Brain,\r\n  ChevronUp,\r\n  MessageSquare,\r\n} from \"lucide-react\"\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\n\r\ninterface StudentGroup {\r\n  idGroupe: number\r\n  nomGroupe: string\r\n  idEtudiant: number\r\n  etudiant: string\r\n  idSoutenance: number\r\n  noteRapport?: number\r\n  notePresentation?: number\r\n  noteDiscussion?: number\r\n  noteSavoirFaireSavoirEtre?: number\r\n  noteTotale?: number\r\n  remarque?: string\r\n}\r\n\r\nexport default function EvaluationPage() {\r\n  const [students, setStudents] = useState<StudentGroup[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [saving, setSaving] = useState(false)\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null)\r\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({})\r\n  const [openRows, setOpenRows] = useState<Record<number, boolean>>({})\r\n  const idEncadrant = 1 // Should be dynamic (e.g., from auth context)\r\n\r\n  useEffect(() => {\r\n    async function fetchStudents() {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/groups-students/${idEncadrant}`)\r\n        if (!res.ok) {\r\n          const errorData = await res.json()\r\n          throw new Error(errorData.error || \"Erreur lors du chargement des données\")\r\n        }\r\n        const data: StudentGroup[] = await res.json()\r\n\r\n        // Ensure idSoutenance exists for each student\r\n        if (data.some((student) => !student.idSoutenance)) {\r\n          throw new Error(\"Some students are missing idSoutenance from the backend\")\r\n        }\r\n\r\n        // Load data with calculated totals, keeping existing grades\r\n        const studentsWithTotal = data.map((student) => ({\r\n          ...student,\r\n          noteTotale: calculateTotal(student),\r\n        }))\r\n\r\n        setStudents(studentsWithTotal)\r\n      } catch (error: any) {\r\n        setError(error.message)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchStudents()\r\n  }, [idEncadrant])\r\n\r\n  const calculateTotal = (student: StudentGroup): number | undefined => {\r\n    const { noteRapport, notePresentation, noteDiscussion, noteSavoirFaireSavoirEtre } = student\r\n    const grades = [noteRapport, notePresentation, noteDiscussion, noteSavoirFaireSavoirEtre].filter(\r\n      (grade) => grade !== undefined && grade !== null && !isNaN(grade),\r\n    ) as number[]\r\n\r\n    if (grades.length === 0) return undefined\r\n\r\n    const sum = grades.reduce((acc, grade) => acc + grade, 0)\r\n    return Number((sum / grades.length).toFixed(2))\r\n  }\r\n\r\n  const validateGrade = (value: string, index: number, field: string): boolean => {\r\n    const numValue = Number(value)\r\n    const errorKey = `${index}-${field}`\r\n\r\n    if (value && (isNaN(numValue) || numValue < 0 || numValue > 20)) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        [errorKey]: \"La note doit être entre 0 et 20\",\r\n      }))\r\n      return false\r\n    } else {\r\n      setValidationErrors((prev) => {\r\n        const newErrors = { ...prev }\r\n        delete newErrors[errorKey]\r\n        return newErrors\r\n      })\r\n      return true\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (index: number, field: string, value: string | number) => {\r\n    const gradeFields = [\"noteRapport\", \"notePresentation\", \"noteDiscussion\", \"noteSavoirFaireSavoirEtre\"]\r\n    if (gradeFields.includes(field)) {\r\n      const isValid = validateGrade(value.toString(), index, field)\r\n      if (!isValid && typeof value === \"string\") {\r\n        const updatedStudents = [...students]\r\n        ;(updatedStudents[index] as any)[field] = value // Allow invalid input temporarily for display\r\n        setStudents(updatedStudents)\r\n        return\r\n      }\r\n    }\r\n\r\n    const updatedStudents = [...students]\r\n    const parsedValue = field === \"remarque\" ? value : value === \"\" ? undefined : Number(value)\r\n    ;(updatedStudents[index] as any)[field] = parsedValue\r\n\r\n    if (gradeFields.includes(field)) {\r\n      updatedStudents[index].noteTotale = calculateTotal(updatedStudents[index])\r\n    }\r\n\r\n    setStudents(updatedStudents)\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (saving || Object.keys(validationErrors).length > 0) return\r\n\r\n    setSaving(true)\r\n    setSuccessMessage(null)\r\n    setError(null)\r\n\r\n    try {\r\n      // Filter students with at least one grade or remark\r\n      const evaluations = students\r\n        .filter((student) => {\r\n          return (\r\n            student.noteRapport !== undefined ||\r\n            student.notePresentation !== undefined ||\r\n            student.noteDiscussion !== undefined ||\r\n            student.noteSavoirFaireSavoirEtre !== undefined ||\r\n            (student.remarque && student.remarque.trim() !== \"\")\r\n          )\r\n        })\r\n        .map((student) => ({\r\n          idSoutenance: student.idSoutenance,\r\n          idGroupe: student.idGroupe,\r\n          idEtudiant: student.idEtudiant,\r\n          noteRapport: student.noteRapport,\r\n          notePresentation: student.notePresentation,\r\n          noteDiscussion: student.noteDiscussion,\r\n          noteSavoirFaireSavoirEtre: student.noteSavoirFaireSavoirEtre,\r\n          remarque: student.remarque,\r\n        }))\r\n\r\n      if (evaluations.length === 0) {\r\n        throw new Error(\"Aucune évaluation à enregistrer - ajoutez au moins une note ou remarque\")\r\n      }\r\n\r\n      const res = await fetch(\"http://localhost:5000/api/evaluations\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ idEncadrant, evaluations }),\r\n      })\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json()\r\n        throw new Error(errorData.error || \"Erreur lors de l'enregistrement\")\r\n      }\r\n\r\n      const result = await res.json()\r\n      setSuccessMessage(result.message || \"Évaluations enregistrées avec succès!\")\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" })\r\n\r\n      // Keep the current state (with updated grades) instead of resetting\r\n      // Optionally refresh to confirm saved data\r\n      const refreshedRes = await fetch(`http://localhost:5000/api/groups-students/${idEncadrant}`)\r\n      const refreshedData: StudentGroup[] = await refreshedRes.json()\r\n      setStudents(\r\n        refreshedData.map((student) => ({\r\n          ...student,\r\n          noteTotale: calculateTotal(student),\r\n        })),\r\n      )\r\n    } catch (error: any) {\r\n      setError(error.message)\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" })\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  const getGradeColor = (grade?: number): string => {\r\n    if (grade === undefined) return \"\"\r\n    if (grade < 8) return \"text-red-600\"\r\n    if (grade < 12) return \"text-orange-600\"\r\n    if (grade < 16) return \"text-blue-600\"\r\n    return \"text-green-600\"\r\n  }\r\n\r\n  const getGradeBgColor = (grade?: number): string => {\r\n    if (grade === undefined) return \"\"\r\n    if (grade < 8) return \"bg-red-50\"\r\n    if (grade < 12) return \"bg-orange-50\"\r\n    if (grade < 16) return \"bg-blue-50\"\r\n    return \"bg-green-50\"\r\n  }\r\n\r\n  const toggleRow = (index: number) => {\r\n    setOpenRows((prev) => ({\r\n      ...prev,\r\n      [index]: !prev[index],\r\n    }))\r\n  }\r\n\r\n  const hasRemark = (student: StudentGroup): boolean => {\r\n    return !!student.remarque && student.remarque.trim() !== \"\"\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto p-4 md:p-6\">\r\n        <Card className=\"border shadow-md\">\r\n          <CardHeader className=\"pb-4 border-b bg-slate-50\">\r\n            <Skeleton className=\"h-8 w-64 mb-2\" />\r\n            <Skeleton className=\"h-4 w-full\" />\r\n          </CardHeader>\r\n          <CardContent className=\"p-6\">\r\n            <Skeleton className=\"h-96 w-full\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-4 md:p-6\">\r\n      <Card className=\"border shadow-md overflow-hidden\">\r\n        <CardHeader className=\"pb-4 border-b bg-gradient-to-r from-blue-50 to-indigo-50\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-2\">\r\n            <div>\r\n              <CardTitle className=\"text-2xl font-bold text-slate-800\">Évaluation des étudiants</CardTitle>\r\n              <CardDescription className=\"text-slate-600\">\r\n                Attribuez des notes entre 0 et 20 pour chaque critère d'évaluation\r\n              </CardDescription>\r\n            </div>\r\n            <Badge\r\n              variant=\"outline\"\r\n              className=\"bg-white text-blue-600 border-blue-200 px-3 py-1 font-medium flex items-center gap-1\"\r\n            >\r\n              <Users className=\"h-3.5 w-3.5\" />\r\n              {students.length} Étudiants\r\n            </Badge>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"p-0\">\r\n          {successMessage && (\r\n            <Alert className=\"m-6 bg-green-50 text-green-800 border-green-200\">\r\n              <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\r\n              <AlertTitle>Succès</AlertTitle>\r\n              <AlertDescription>{successMessage}</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {error && (\r\n            <Alert className=\"m-6 bg-red-50 text-red-800 border-red-200\">\r\n              <AlertCircle className=\"h-4 w-4 text-red-600\" />\r\n              <AlertTitle>Erreur</AlertTitle>\r\n              <AlertDescription>{error}</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {students.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center py-12\">\r\n              <Users className=\"h-12 w-12 text-slate-300 mb-4\" />\r\n              <p className=\"text-slate-500 text-center\">Aucun étudiant trouvé.</p>\r\n            </div>\r\n          ) : (\r\n            <ScrollArea className=\"h-full w-full\">\r\n              <div className=\"min-w-[800px]\">\r\n                <Table>\r\n                  <TableHeader className=\"bg-slate-50 sticky top-0 z-10\">\r\n                    <TableRow>\r\n                      <TableHead className=\"w-[250px] pl-6\">Étudiant</TableHead>\r\n                      <TableHead className=\"text-center w-[120px]\">\r\n                        <div className=\"flex items-center justify-center gap-1\">\r\n                          <FileText className=\"h-4 w-4 text-blue-600\" />\r\n                          <span>Rapport</span>\r\n                        </div>\r\n                      </TableHead>\r\n                      <TableHead className=\"text-center w-[120px]\">\r\n                        <div className=\"flex items-center justify-center gap-1\">\r\n                          <PresentationIcon className=\"h-4 w-4 text-amber-600\" />\r\n                          <span>Présentation</span>\r\n                        </div>\r\n                      </TableHead>\r\n                      <TableHead className=\"text-center w-[120px]\">\r\n                        <div className=\"flex items-center justify-center gap-1\">\r\n                          <MessageCircle className=\"h-4 w-4 text-green-600\" />\r\n                          <span>Discussion</span>\r\n                        </div>\r\n                      </TableHead>\r\n                      <TableHead className=\"text-center w-[120px]\">\r\n                        <div className=\"flex items-center justify-center gap-1\">\r\n                          <Brain className=\"h-4 w-4 text-purple-600\" />\r\n                          <span>Savoir-faire</span>\r\n                        </div>\r\n                      </TableHead>\r\n                      <TableHead className=\"text-center w-[120px]\">Note Totale</TableHead>\r\n                      <TableHead className=\"text-center w-[80px]\">Remarque</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {students.map((student, index) => (\r\n                      <Collapsible\r\n                        key={`${student.idSoutenance}-${student.idGroupe}-${student.idEtudiant}`}\r\n                        open={openRows[index]}\r\n                        onOpenChange={() => {}}\r\n                      >\r\n                        <TableRow className={`hover:bg-slate-50 ${index % 2 === 0 ? \"bg-white\" : \"bg-slate-50/50\"}`}>\r\n                          <TableCell className=\"font-medium pl-6 py-4\">\r\n                            <div>\r\n                              <div className=\"font-medium text-slate-800\">{student.etudiant}</div>\r\n                              <div className=\"text-sm text-slate-500\">Groupe: {student.nomGroupe}</div>\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"20\"\r\n                                step=\"0.01\"\r\n                                value={student.noteRapport !== undefined ? student.noteRapport : \"\"}\r\n                                onChange={(e) => handleInputChange(index, \"noteRapport\", e.target.value)}\r\n                                className={`w-16 text-center h-9 ${validationErrors[`${index}-noteRapport`] ? \"border-red-500 focus-visible:ring-red-500\" : \"\"}`}\r\n                              />\r\n                              {validationErrors[`${index}-noteRapport`] && (\r\n                                <p className=\"text-red-500 text-xs mt-1 text-center w-full\">!</p>\r\n                              )}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"20\"\r\n                                step=\"0.01\"\r\n                                value={student.notePresentation !== undefined ? student.notePresentation : \"\"}\r\n                                onChange={(e) => handleInputChange(index, \"notePresentation\", e.target.value)}\r\n                                className={`w-16 text-center h-9 ${validationErrors[`${index}-notePresentation`] ? \"border-red-500 focus-visible:ring-red-500\" : \"\"}`}\r\n                              />\r\n                              {validationErrors[`${index}-notePresentation`] && (\r\n                                <p className=\"text-red-500 text-xs mt-1 text-center w-full\">!</p>\r\n                              )}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"20\"\r\n                                step=\"0.01\"\r\n                                value={student.noteDiscussion !== undefined ? student.noteDiscussion : \"\"}\r\n                                onChange={(e) => handleInputChange(index, \"noteDiscussion\", e.target.value)}\r\n                                className={`w-16 text-center h-9 ${validationErrors[`${index}-noteDiscussion`] ? \"border-red-500 focus-visible:ring-red-500\" : \"\"}`}\r\n                              />\r\n                              {validationErrors[`${index}-noteDiscussion`] && (\r\n                                <p className=\"text-red-500 text-xs mt-1 text-center w-full\">!</p>\r\n                              )}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                              <Input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"20\"\r\n                                step=\"0.01\"\r\n                                value={\r\n                                  student.noteSavoirFaireSavoirEtre !== undefined\r\n                                    ? student.noteSavoirFaireSavoirEtre\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(e) => handleInputChange(index, \"noteSavoirFaireSavoirEtre\", e.target.value)}\r\n                                className={`w-16 text-center h-9 ${validationErrors[`${index}-noteSavoirFaireSavoirEtre`] ? \"border-red-500 focus-visible:ring-red-500\" : \"\"}`}\r\n                              />\r\n                              {validationErrors[`${index}-noteSavoirFaireSavoirEtre`] && (\r\n                                <p className=\"text-red-500 text-xs mt-1 text-center w-full\">!</p>\r\n                              )}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <div\r\n                              className={`px-3 py-1.5 rounded-md font-medium inline-block min-w-[60px] ${getGradeBgColor(student.noteTotale)} ${getGradeColor(student.noteTotale)}`}\r\n                            >\r\n                              {student.noteTotale !== undefined && !isNaN(student.noteTotale)\r\n                                ? student.noteTotale\r\n                                : \"-\"}\r\n                              /20\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-center py-4\">\r\n                            <CollapsibleTrigger asChild onClick={() => toggleRow(index)}>\r\n                              <Button\r\n                                variant=\"ghost\"\r\n                                size=\"sm\"\r\n                                className={`h-9 w-9 p-0 relative ${hasRemark(student) ? \"text-blue-600\" : \"\"}`}\r\n                              >\r\n                                {openRows[index] ? (\r\n                                  <ChevronUp className=\"h-4 w-4\" />\r\n                                ) : (\r\n                                  <MessageSquare className=\"h-4 w-4\" />\r\n                                )}\r\n                                {hasRemark(student) && !openRows[index] && (\r\n                                  <span className=\"absolute -top-1 -right-1 h-2 w-2 bg-blue-600 rounded-full\"></span>\r\n                                )}\r\n                                <span className=\"sr-only\">Toggle remarks</span>\r\n                              </Button>\r\n                            </CollapsibleTrigger>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <CollapsibleContent>\r\n                          <TableRow className=\"border-t-0 bg-slate-50\">\r\n                            <TableCell colSpan={7} className=\"p-4\">\r\n                              <div className=\"bg-white rounded-md border p-3\">\r\n                                <div className=\"text-sm font-medium text-slate-700 mb-2 flex items-center gap-1\">\r\n                                  <MessageSquare className=\"h-4 w-4 text-blue-600\" />\r\n                                  Remarque\r\n                                </div>\r\n                                <Textarea\r\n                                  value={student.remarque ?? \"\"}\r\n                                  onChange={(e) => handleInputChange(index, \"remarque\", e.target.value)}\r\n                                  placeholder=\"Commentaires sur la performance de l'étudiant...\"\r\n                                  className=\"resize-none w-full border-slate-200\"\r\n                                  rows={2}\r\n                                />\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </CollapsibleContent>\r\n                      </Collapsible>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </ScrollArea>\r\n          )}\r\n        </CardContent>\r\n\r\n        <CardFooter className=\"p-6 bg-slate-50 border-t flex justify-end\">\r\n          <Button\r\n            onClick={handleSubmit}\r\n            disabled={saving || Object.keys(validationErrors).length > 0}\r\n            className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white\"\r\n            size=\"lg\"\r\n          >\r\n            {saving ? (\r\n              <>\r\n                <span className=\"mr-2\">Enregistrement...</span>\r\n                <div className=\"h-4 w-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save className=\"mr-2 h-4 w-4\" />\r\n                Enregistrer les évaluations\r\n              </>\r\n            )}\r\n          </Button>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}