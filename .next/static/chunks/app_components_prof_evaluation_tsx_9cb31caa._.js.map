{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayoub/smart_pfe_W/app/components/prof/evaluation.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable react/no-unescaped-entities */\r\n\"use client\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface StudentGroup {\r\n  idGroupe: number;\r\n  nomGroupe: string;\r\n  idEtudiant: number;\r\n  etudiant: string;\r\n  idSoutenance: number;\r\n  noteRapport?: number;\r\n  notePresentation?: number;\r\n  noteDiscussion?: number;\r\n  noteSavoirFaireSavoirEtre?: number;\r\n  noteTotale?: number;\r\n  remarque?: string;\r\n}\r\n\r\nconst EvaluationPage: React.FC = () => {\r\n  const [students, setStudents] = useState<StudentGroup[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [updating, setUpdating] = useState<number | null>(null);\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\r\n  const idEncadrant = 1; // For example purposes\r\n\r\n  useEffect(() => {\r\n    async function fetchStudents() {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/groups-students/${idEncadrant}`);\r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          throw new Error(errorData.error || \"Erreur lors du chargement des données\");\r\n        }\r\n        const data: StudentGroup[] = await res.json();\r\n\r\n        if (data.some((student) => !student.idSoutenance)) {\r\n          throw new Error(\"Some students are missing idSoutenance from the backend\");\r\n        }\r\n\r\n        const studentsWithTotal = data.map((student) => ({\r\n          ...student,\r\n          noteTotale: calculateTotal(student),\r\n        }));\r\n\r\n        setStudents(studentsWithTotal);\r\n      } catch (error: any) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchStudents();\r\n  }, [idEncadrant]);\r\n\r\n  const calculateTotal = (student: StudentGroup): number | undefined => {\r\n    const grades = [\r\n      student.noteRapport,\r\n      student.notePresentation,\r\n      student.noteDiscussion,\r\n      student.noteSavoirFaireSavoirEtre,\r\n    ].filter((grade): grade is number => grade !== undefined && !isNaN(grade));\r\n    if (grades.length === 0) return undefined;\r\n    const sum = grades.reduce((acc, grade) => acc + grade, 0);\r\n    return Number((sum / grades.length).toFixed(2));\r\n  };\r\n\r\n  const validateGrade = (value: string, index: number, field: string): boolean => {\r\n    const numValue = Number(value);\r\n    const errorKey = `${index}-${field}`;\r\n    if (value && (isNaN(numValue) || numValue < 0 || numValue > 20)) {\r\n      setValidationErrors((prev) => ({ ...prev, [errorKey]: \"La note doit être entre 0 et 20\" }));\r\n      return false;\r\n    } else {\r\n      setValidationErrors((prev) => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[errorKey];\r\n        return newErrors;\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (index: number, field: string, value: string | number) => {\r\n    const gradeFields = [\"noteRapport\", \"notePresentation\", \"noteDiscussion\", \"noteSavoirFaireSavoirEtre\"];\r\n    if (gradeFields.includes(field)) {\r\n      if (!validateGrade(value.toString(), index, field)) return;\r\n    }\r\n    const updatedStudents = [...students];\r\n    const parsedValue = field === \"remarque\" ? value : value === \"\" ? undefined : Number(value);\r\n    (updatedStudents[index] as any)[field] = parsedValue;\r\n    if (gradeFields.includes(field)) {\r\n      updatedStudents[index].noteTotale = calculateTotal(updatedStudents[index]);\r\n    }\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const handleSave = async (index: number) => {\r\n    if (updating !== null || Object.keys(validationErrors).length > 0) return;\r\n    setUpdating(index);\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n    try {\r\n      const student = students[index];\r\n      const evaluation = {\r\n        idSoutenance: student.idSoutenance,\r\n        idGroupe: student.idGroupe,\r\n        idEtudiant: student.idEtudiant,\r\n        noteRapport: student.noteRapport,\r\n        notePresentation: student.notePresentation,\r\n        noteDiscussion: student.noteDiscussion,\r\n        noteSavoirFaireSavoirEtre: student.noteSavoirFaireSavoirEtre,\r\n        noteTotale: calculateTotal(student),\r\n        remarque: student.remarque,\r\n      };\r\n      const response = await fetch(\"http://localhost:5000/api/evaluations\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ idEncadrant, evaluation }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Erreur lors de la sauvegarde\");\r\n      }\r\n      const result = await response.json();\r\n      setSuccessMessage(result.message || \"Évaluation sauvegardée avec succès!\");\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      const refreshedRes = await fetch(`http://localhost:5000/api/groups-students/${idEncadrant}`);\r\n      const refreshedData: StudentGroup[] = await refreshedRes.json();\r\n      setStudents(\r\n        refreshedData.map((student) => ({\r\n          ...student,\r\n          noteTotale: calculateTotal(student),\r\n        }))\r\n      );\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    } finally {\r\n      setUpdating(null);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (index: number) => {\r\n    if (updating !== null || Object.keys(validationErrors).length > 0) return;\r\n    setUpdating(index);\r\n    setError(null);\r\n    setSuccessMessage(null);\r\n    try {\r\n      const student = students[index];\r\n      const evaluation = {\r\n        idSoutenance: student.idSoutenance,\r\n        idGroupe: student.idGroupe,\r\n        idEtudiant: student.idEtudiant,\r\n        noteRapport: student.noteRapport,\r\n        notePresentation: student.notePresentation,\r\n        noteDiscussion: student.noteDiscussion,\r\n        noteSavoirFaireSavoirEtre: student.noteSavoirFaireSavoirEtre,\r\n        noteTotale: calculateTotal(student),\r\n        remarque: student.remarque,\r\n      };\r\n      const response = await fetch(\"http://localhost:5000/api/evaluations\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ idEncadrant, evaluation }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Erreur lors de la mise à jour\");\r\n      }\r\n      const result = await response.json();\r\n      setSuccessMessage(result.message || \"Évaluation mise à jour avec succès!\");\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      const refreshedRes = await fetch(`http://localhost:5000/api/groups-students/${idEncadrant}`);\r\n      const refreshedData: StudentGroup[] = await refreshedRes.json();\r\n      setStudents(\r\n        refreshedData.map((student) => ({\r\n          ...student,\r\n          noteTotale: calculateTotal(student),\r\n        }))\r\n      );\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    } finally {\r\n      setUpdating(null);\r\n    }\r\n  };\r\n\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/generate-pdf/${idEncadrant}`, {\r\n        method: \"GET\",\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Erreur lors de la génération du PDF\");\r\n      }\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = \"evaluations.pdf\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      window.URL.revokeObjectURL(url);\r\n      setSuccessMessage(\"PDF généré avec succès!\");\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"p-6\">Chargement...</div>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-7xl mx-auto\">\r\n      {successMessage && (\r\n        <div className=\"mb-4 p-4 bg-green-100 text-green-700 rounded\">{successMessage}</div>\r\n      )}\r\n      {error && (\r\n        <div className=\"mb-4 p-4 bg-red-100 text-red-700 rounded\">{error}</div>\r\n      )}\r\n      <h1 className=\"text-2xl font-bold mb-6\">Évaluation des étudiants</h1>\r\n      {students.length === 0 ? (\r\n        <p>Aucun étudiant trouvé.</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full border-collapse\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200\">\r\n                  <th className=\"border p-2\">Groupe</th>\r\n                  <th className=\"border p-2\">Étudiant</th>\r\n                  <th className=\"border p-2\">Rapport</th>\r\n                  <th className=\"border p-2\">Présentation</th>\r\n                  <th className=\"border p-2\">Discussion</th>\r\n                  <th className=\"border p-2\">Savoir-faire</th>\r\n                  <th className=\"border p-2\">Total</th>\r\n                  <th className=\"border p-2\">Remarque</th>\r\n                  <th className=\"border p-2\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {students.map((student, index) => (\r\n                  <tr key={`${student.idSoutenance}-${student.idGroupe}-${student.idEtudiant}`}>\r\n                    <td className=\"border p-2\">{student.nomGroupe}</td>\r\n                    <td className=\"border p-2\">{student.etudiant}</td>\r\n                    <td className=\"border p-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"20\"\r\n                        step=\"0.01\"\r\n                        value={student.noteRapport ?? \"\"}\r\n                        onChange={(e) => handleInputChange(index, \"noteRapport\", e.target.value)}\r\n                        className={`w-full p-1 border rounded ${validationErrors[`${index}-noteRapport`] ? \"border-red-500\" : \"\"}`}\r\n                      />\r\n                      {validationErrors[`${index}-noteRapport`] && (\r\n                        <span className=\"text-red-500 text-xs\">{validationErrors[`${index}-noteRapport`]}</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"border p-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"20\"\r\n                        step=\"0.01\"\r\n                        value={student.notePresentation ?? \"\"}\r\n                        onChange={(e) => handleInputChange(index, \"notePresentation\", e.target.value)}\r\n                        className={`w-full p-1 border rounded ${validationErrors[`${index}-notePresentation`] ? \"border-red-500\" : \"\"}`}\r\n                      />\r\n                      {validationErrors[`${index}-notePresentation`] && (\r\n                        <span className=\"text-red-500 text-xs\">{validationErrors[`${index}-notePresentation`]}</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"border p-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"20\"\r\n                        step=\"0.01\"\r\n                        value={student.noteDiscussion ?? \"\"}\r\n                        onChange={(e) => handleInputChange(index, \"noteDiscussion\", e.target.value)}\r\n                        className={`w-full p-1 border rounded ${validationErrors[`${index}-noteDiscussion`] ? \"border-red-500\" : \"\"}`}\r\n                      />\r\n                      {validationErrors[`${index}-noteDiscussion`] && (\r\n                        <span className=\"text-red-500 text-xs\">{validationErrors[`${index}-noteDiscussion`]}</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"border p-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"20\"\r\n                        step=\"0.01\"\r\n                        value={student.noteSavoirFaireSavoirEtre ?? \"\"}\r\n                        onChange={(e) => handleInputChange(index, \"noteSavoirFaireSavoirEtre\", e.target.value)}\r\n                        className={`w-full p-1 border rounded ${validationErrors[`${index}-noteSavoirFaireSavoirEtre`] ? \"border-red-500\" : \"\"}`}\r\n                      />\r\n                      {validationErrors[`${index}-noteSavoirFaireSavoirEtre`] && (\r\n                        <span className=\"text-red-500 text-xs\">{validationErrors[`${index}-noteSavoirFaireSavoirEtre`]}</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"border p-2 text-center\">\r\n                      {student.noteTotale !== undefined && !isNaN(student.noteTotale)\r\n                        ? student.noteTotale.toFixed(2)\r\n                        : \"-\"}\r\n                    </td>\r\n                    <td className=\"border p-2\">\r\n                      <textarea\r\n                        value={student.remarque ?? \"\"}\r\n                        onChange={(e) => handleInputChange(index, \"remarque\", e.target.value)}\r\n                        className=\"w-full p-1 border rounded\"\r\n                        rows={2}\r\n                      />\r\n                    </td>\r\n                    <td className=\"border p-2\">\r\n                      <div className=\"flex flex-col gap-1\">\r\n                        <Button\r\n                          onClick={() => handleSave(index)}\r\n                          disabled={updating === index || Object.keys(validationErrors).length > 0}\r\n                          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-1 rounded\"\r\n                        >\r\n                          Sauvegarder\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleUpdate(index)}\r\n                          disabled={updating === index || Object.keys(validationErrors).length > 0}\r\n                          className=\"w-full bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded\"\r\n                        >\r\n                          Mettre à jour\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <Button\r\n              onClick={handleGeneratePDF}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\r\n            >\r\n              Générer PDF\r\n            </Button>\r\n          </div>  \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvaluationPage;"],"names":[],"mappings":"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","debugId":null}}]
}